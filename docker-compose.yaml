services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - rabbitmq_go_net

  server:
    container_name: server
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/server
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - OUTPUT_WORKER_QUEUE=projection-input-queue
      - OUTPUT_WORKER_QUEUE_TIMEOUT=5
      - OUTPUT_WORKER_QUEUE_COUNT=1
      - SERVER_PORT=7070
      - LOGGER_LEVEL=debug
    ports:
      - "7070:7070/tcp"
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  projection1:
    container_name: projection1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/projection
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - INPUT_WORKER_QUEUE=projection-input-queue
      - INPUT_WORKER_QUEUE_TIMEOUT=5
      - INPUT_WORKER_QUEUE_COUNT=1
      - FANOUT_PUBLISHER_EXCHANGE=projection-output-exchange
      - FANOUT_PUBLISHER_TIMEOUT=5
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  rabbitmq_go_net:
    driver: bridge
