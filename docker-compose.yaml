services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - rabbitmq_go_net

  server:
    container_name: server
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/server
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - OUTPUT_WORKER_QUEUE=projection-input-queue
      - OUTPUT_WORKER_QUEUE_TIMEOUT=5
      - OUTPUT_WORKER_QUEUE_COUNT=1
      - SERVER_PORT=7070
      - LOGGER_LEVEL=debug
    ports:
      - "7070:7070/tcp"
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  projection1:
    container_name: projection1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/projection
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - INPUT_WORKER_QUEUE=projection-input-queue
      - INPUT_WORKER_QUEUE_TIMEOUT=5
      - INPUT_WORKER_QUEUE_COUNT=1
      - DIRECT_PUBLISHER_EXCHANGE=projection-output-exchange
      - DIRECT_PUBLISHER_TIMEOUT=5
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 1 Controller
  os_counter_1:
    container_name: os_counter_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/os_counter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - OUTPUT_WORKER_QUEUE=os-counter-output-queue
      - OUTPUT_WORKER_QUEUE_TIMEOUT=5
      - OUTPUT_WORKER_QUEUE_COUNT=1
      - DIRECT_SUBSCRIBER_EXCHANGE=projection-output-exchange
      - DIRECT_SUBSCRIBER_QUEUE=os-counter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=game
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 2 and Query 3 controller
  filter_indie_1:
    container_name: filter_indie_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/filter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - FILTER_NAME=indieFilter
      - DIRECT_PUBLISHER_EXCHANGE=indie-filter-exchange
      - DIRECT_PUBLISHER_TIMEOUT=5
      - OUTPUT_ROUTER_TAGS=1 # Affects filter_decade and JoinnerQuery3
      - DIRECT_SUBSCRIBER_EXCHANGE=projection-output-exchange
      - DIRECT_SUBSCRIBER_QUEUE=indie-genre-filter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=game
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 2 controller
  filter_decade_1:
    container_name: filter_decade_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/filter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - FILTER_NAME=decadeFilter
      - OUTPUT_WORKER_QUEUE=decade-filter-output-queue
      - OUTPUT_WORKER_QUEUE_TIMEOUT=5
      - OUTPUT_WORKER_QUEUE_COUNT=1
      - DIRECT_SUBSCRIBER_EXCHANGE=indie-filter-exchange
      - DIRECT_SUBSCRIBER_QUEUE=decade-filter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=1 # Affects Top10
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 3 Controller
  filter_positive_1:
    container_name: filter_positive_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/filter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - FILTER_NAME=positiveFilter
      - DIRECT_PUBLISHER_EXCHANGE=positive-filter-exchange
      - DIRECT_PUBLISHER_TIMEOUT=5
      - OUTPUT_ROUTER_TAGS=1 # Affects Joinner Query 3
      - DIRECT_SUBSCRIBER_EXCHANGE=projection-output-exchange
      - DIRECT_SUBSCRIBER_QUEUE=positive-filter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=review
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 4 and Query 5 controller
  filter_action_1:
    container_name: filter_action_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/filter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - FILTER_NAME=actionFilter
      - DIRECT_PUBLISHER_EXCHANGE=action-filter-exchange
      - DIRECT_PUBLISHER_TIMEOUT=5
      - OUTPUT_ROUTER_TAGS=1 # Affects JoinnerQuery 4 and Joinner Query 5
      - DIRECT_SUBSCRIBER_EXCHANGE=projection-output-exchange
      - DIRECT_SUBSCRIBER_QUEUE=action-genre-filter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=game
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 4 and Query 5 controller
  filter_negative_1:
    container_name: filter_negative_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/filter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - FILTER_NAME=negativeFilter
      - DIRECT_PUBLISHER_EXCHANGE=negative-filter-exchange
      - DIRECT_PUBLISHER_TIMEOUT=5
      - OUTPUT_ROUTER_TAGS=1 # Affect filter_english and JoinnerQuery5
      - DIRECT_SUBSCRIBER_EXCHANGE=projection-output-exchange
      - DIRECT_SUBSCRIBER_QUEUE=negative-filter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=review
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy

# Query 4 controller
  filter_english_1:
    container_name: filter_english_1
    build:
      context: ./
      dockerfile: cmd/Dockerfile
    entrypoint: /cmd/filter
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
      - FILTER_NAME=englishFilter
      - DIRECT_PUBLISHER_EXCHANGE=english-filter-exchange
      - DIRECT_PUBLISHER_TIMEOUT=5
      - OUTPUT_ROUTER_TAGS=1
      - DIRECT_SUBSCRIBER_EXCHANGE=negative-filter-exchange
      - DIRECT_SUBSCRIBER_QUEUE=english-filter-input-queue
      - DIRECT_SUBSCRIBER_KEYS=1
      - LOGGER_LEVEL=debug
    networks:
      - rabbitmq_go_net
    depends_on:
      rabbitmq:
        condition: service_healthy


networks:
  rabbitmq_go_net:
    driver: bridge
